name: Events Demo 1
on: 
  pull_request:
    types:
      - opened
      # here we have used types for the activity types
  workflow_dispatch:
  push:
  # here we have used event filtering: we have said that run workflows in push on specific branch
    branches:
      - main
      - master
      - 'dev-*' 
      # e.g of single * = dev-new dev-this-is-new
      - 'feat/**'
    paths-ignore:
      - '.github/workflows/*'
    # paths:
    #   - "**.js" 
    #   trigger worflows when there is changes in any js file
      # double ** indicates - futher character with slashes e.g feat/new/button feat/new
      # read more about workflow syntax(filtering) here https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Output event data
        run: echo "${{ toJSON(github.event) }}"
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Test code
        run: npm run test
      - name: Build code
        run: npm run build
      - name: Deploy project
        run: echo "Deploying..."



# Activity types
# It gives more detailed control over when a workflow will be triggered
# e.g for event Pull_Request -> opened, closed, edited

# Filters:
# More detailed control over when a workflow will be triggered
# e.g push Event -> filter based on target branch
# we donot want to trigger workflow when we push in branch rather than main branch

# Note
# By default , PUll request based on Forks do not trigger workflow


# Cancelling and Skipping workflow Runs
# 1. By default workflows get cancelled if job fail
# 2. by default if step of one of the job failed worklow cancel
# 3. we can cancel workflow manually

# Skipping
# 1. By default,all matching events start a workflow
# 2.Exceptions for "push" and pull_request
# 3 . skip with proper commit message
  # e.g if you make any changes like only adding comments in your code and push your code in main branch you can skip workflow
  # for that use command like this =  git commit -m added comments [skip ci]
